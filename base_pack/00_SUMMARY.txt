# FLoreada Migration - Complete Package

## What's Included

This package contains everything you need to migrate from FlowJo to FLoreada processing:

### Core Files (Required)
1. **floreada_functions.R** - Core processing functions
   - Replaces `bears01::flowjo2df()` 
   - Functions: `floreada2df()`, `processFloreadaExportDir()`, `read_keywords()`
   - Handles flexible column structures with `bind_rows()`

2. **process_floreada_export.R** - Main processing script
   - Replaces your old `2021-10-24_processflowjoexport.R`
   - Edit the paths and run

3. **platesetup.txt** - Template experimental design file
   - Customize this for your experiment
   - Create in Excel, save as tab-delimited text

### Documentation
4. **QUICKSTART.md** - 5-minute setup guide (START HERE!)
5. **README_migration.md** - Complete documentation
6. **platesetup_instructions.txt** - Detailed platesetup examples
7. **test_setup.R** - Validation script

## Key Differences: FlowJo vs FLoreada

| Aspect | FlowJo (Old) | FLoreada (New) |
|--------|--------------|----------------|
| CSV Structure | Metadata in CSV header | No header, pure data |
| Metadata Source | Parsed from CSV | Separate keywords.txt |
| Channels | Fixed columns (~10) | Flexible (up to 49) |
| Column Handling | Assumes same columns | Uses bind_rows() for flexibility |
| Function | bears01::flowjo2df() | floreada2df() |

## How the New System Works

```
Input Files:                Processing:              Output:
├── 259.fcs.csv         →                        → P3_combodf.txt
├── 260.fcs.csv         →  floreada2df()         →  (All files combined)
├── 261.fcs.csv         →  + bind_rows()         →  (+ metadata)
├── keywords.txt        →  + merge platesetup    →  (+ your annotations)
└── platesetup.txt      →                        →
```

### Step-by-Step Flow:
1. **Read CSV** - FLoreada CSV (starts at line 1, no metadata)
2. **Extract metadata** - From keywords.txt (Date, Operator, Well, etc.)
3. **Match identifier** - File number (259) or Well (A1) or filename
4. **Merge platesetup** - Add your experimental variables
5. **Combine all files** - Using bind_rows() (handles different columns!)
6. **Write output** - Same format as before, works with existing analysis

## Installation

1. Download all files to your computer
2. Put `floreada_functions.R` and `process_floreada_export.R` in your experiment folder
3. Create `floreadaexport/` subfolder
4. Put your CSV files and keywords.txt in floreadaexport/
5. Create your platesetup.txt (see examples)
6. Edit process_floreada_export.R (change path)
7. Run it!

## platesetup.txt Format

**Critical**: First column must be FileID, WellID, or File

### Example for file numbers (259, 260, etc.):
```
FileID	Sample	Treatment	Dose
259	CtrlA	Control	0
260	TrtA	Drug1	10
261	TrtB	Drug1	20
```

### Example for well positions:
```
WellID	Sample	CellLine	Day
A1	NT3	K562	Day6
A2	CD151	K562	Day6
B1	CD55	HEK293T	Day6
```

Add any columns you want - they'll all be merged with your flow data!

## Metadata Extraction

From keywords.txt, the system extracts:
- `$WELLID` → WellID
- `$DATE` → Date  
- `$OP` → Operator
- `$PROJ` or `$EXP` → Experiment
- `$TOT` → TotalEvents
- `$FLOWRATE` → FlowRate
- `$VOL` → Volume
- `$FIL` → FileID

Plus many more FCS keywords are preserved if present.

## Using with Your Existing Analysis

**Good news**: Your existing analysis scripts should work with minimal changes!

### Old Code:
```r
source('/Users/chsiung/Dropbox/Postdoc/Flow/MetaAnalysis/FlowAnalysis/flowenv.R')
singlets <- processFlowjoExportDir(dir = 'flowjoexport', csvstring = '_P3.csv')
```

### New Code:
```r
source('floreada_functions.R')  # Use the new functions
singlets <- processFloreadaExportDir(dir = 'floreadaexport', csvstring = '_P3.csv')
```

The output format is the same, so your downstream analysis (filtering, plotting, etc.) works unchanged!

## Handling Different Channel Configurations

**Key Feature**: Uses `bind_rows()` for flexible merging

If you have files with different channels:
```
File 1: Time, FSC-A, SSC-A, BL1-A, BL2-A
File 2: Time, FSC-A, SSC-A, BL1-A, RL1-A
```

The system will combine them with:
```
Combined: Time, FSC-A, SSC-A, BL1-A, BL2-A, RL1-A
          (File 2 has NA for BL2-A, File 1 has NA for RL1-A)
```

You can filter/select the channels you need in your analysis script.

## Troubleshooting

### Test Your Setup
Run `test_setup.R` to validate your configuration before processing everything.

### Common Problems

1. **"No CSV files found"**
   - Check csvstring pattern matches your files
   - Example: If files are `259_P3.csv`, use `csvstring = '_P3.csv'`

2. **"Keywords file not found"**
   - Make sure keywords.txt is in floreadaexport folder
   - Check filename is exactly "keywords.txt" (case-sensitive on some systems)

3. **"Could not find matching column to merge"**
   - Check first column of platesetup.txt
   - Must be FileID (for numbers like 259) or WellID (for A1, B2) or File (for full filename)
   - Check that the values match your actual files

4. **Missing metadata after merge**
   - Open platesetup.txt and check values match your FileID/WellID
   - FileID should be just the number (259) not the full filename
   - Run with one file first to debug

### Getting Help

Check the files in this order:
1. QUICKSTART.md - Quick setup
2. README_migration.md - Detailed info
3. platesetup_instructions.txt - Platesetup examples
4. Run test_setup.R - Validate configuration

## Advanced Usage

### Option 1: Single keywords.txt for all files
```r
processFloreadaExportDir(
  dir = 'floreadaexport',
  csvstring = '.csv',
  keywords_dir = 'floreadaexport'  # One keywords.txt here
)
```

### Option 2: Separate keywords for each file
```r
processFloreadaExportDir_matched(
  dir = 'floreadaexport',
  csvstring = '.csv',
  keywords_pattern = '_keywords.txt'  # 259_keywords.txt, 260_keywords.txt, etc.
)
```

### Processing Multiple Gates
```r
# Singlets
singlets <- processFloreadaExportDir(
  dir = 'floreadaexport',
  csvstring = '_P3.csv',
  fileout = 'P3_combodf.txt'
)

# GFP positive
gfppos <- processFloreadaExportDir(
  dir = 'floreadaexport',
  csvstring = '_GFPpos.csv',
  fileout = 'GFPpos_combodf.txt'
)
```

## System Requirements

- R (any recent version)
- Required packages: readr, dplyr, stringr, data.table
- Install with: `install.packages(c('readr', 'dplyr', 'stringr', 'data.table'))`

## Questions?

Check the documentation files or examine the well-commented function code in `floreada_functions.R`.

## File Checklist

Before you start, make sure you have:
- [ ] floreada_functions.R (in experiment folder)
- [ ] process_floreada_export.R (in experiment folder)  
- [ ] floreadaexport/ folder (created)
- [ ] CSV files from FLoreada (in floreadaexport/)
- [ ] keywords.txt (in floreadaexport/)
- [ ] platesetup.txt (customized for your experiment)
- [ ] Updated paths in process_floreada_export.R

Then run and you're done!
